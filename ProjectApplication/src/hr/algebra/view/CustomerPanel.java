/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Customer;
import hr.algebra.utils.MessageUtils;
import hr.algebra.view.model.CustomerTableModel;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Karla
 */
public class CustomerPanel extends javax.swing.JPanel {

    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;

    //private static final String DIR = "assets";

    private Repository repository;
    private CustomerTableModel customersTableModel;

    private Customer selectedCustomer;
    
    /**
     * Creates new form CustomerPanel
     */
    public CustomerPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbBrojTelefonaError = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCustomers = new javax.swing.JTable();
        lbBrojTelefona = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        tfBrojTelefona = new javax.swing.JTextField();
        lbImeError = new javax.swing.JLabel();
        lbNazivKarticeError = new javax.swing.JLabel();
        lbOIB = new javax.swing.JLabel();
        lbNazivKartice = new javax.swing.JLabel();
        lbOIBError = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        tfNazivKartice = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        lbPrezimeError = new javax.swing.JLabel();
        lbIme = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        lblPrezime = new javax.swing.JLabel();
        tfPrezime = new javax.swing.JTextField();
        tfIme = new javax.swing.JTextField();
        tfOIB = new javax.swing.JTextField();
        lblEmailError = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(704, 555));

        lbBrojTelefonaError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbBrojTelefonaError.setForeground(new java.awt.Color(255, 0, 51));

        btnUpdate.setBackground(new java.awt.Color(255, 204, 204));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tbCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCustomers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCustomersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCustomers);

        lbBrojTelefona.setText("Broj telefona:");

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lbImeError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbImeError.setForeground(new java.awt.Color(255, 0, 51));

        lbNazivKarticeError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbNazivKarticeError.setForeground(new java.awt.Color(255, 0, 51));

        lbOIB.setText("OIB:");

        lbNazivKartice.setText("Naziv kartice:");

        lbOIBError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbOIBError.setForeground(new java.awt.Color(255, 0, 51));

        btnDelete.setBackground(new java.awt.Color(153, 0, 51));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lbEmail.setText("Email:");

        lbPrezimeError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPrezimeError.setForeground(new java.awt.Color(255, 0, 51));

        lbIme.setText("Ime:");

        lblPrezime.setText("Prezime:");

        lblEmailError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEmailError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbOIB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbIme, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfOIB, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tfIme, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbOIBError)
                                    .addComponent(lbImeError)
                                    .addComponent(lbPrezimeError))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbNazivKartice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tfNazivKartice, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lbNazivKarticeError))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tfBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lbBrojTelefonaError)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblEmailError))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmailError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbBrojTelefonaError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNazivKartice, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNazivKartice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNazivKarticeError)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbImeError)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(tfIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfOIB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbIme, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbPrezimeError))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbOIB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbOIBError)))))
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete))
                .addGap(87, 87, 87)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (selectedCustomer == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose customer to update");
            return;
        }
        if (formValid()) {
            try {
                selectedCustomer.setIme(tfIme.getText().trim());
                selectedCustomer.setPrezime(tfPrezime.getText().trim());
                selectedCustomer.setOIB(tfOIB.getText().trim());
                selectedCustomer.setEmail(tfEmail.getText().trim());
                selectedCustomer.setBrojTelefona(tfBrojTelefona.getText().trim());
                selectedCustomer.setNazivKartice(tfNazivKartice.getText().trim());
                 
                repository.update(selectedCustomer);
                customersTableModel.setCustomers(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????
                Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to update customer!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if (formValid()) {
            try {
                Customer customer = new Customer(
                        tfIme.getText().trim(),
                        tfPrezime.getText().trim(),
                        tfOIB.getText().trim(),
                        tfEmail.getText().trim(),
                        tfBrojTelefona.getText().trim(),
                        tfNazivKartice.getText().trim()
                );
                repository.create(customer);
                customersTableModel.setCustomers(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                Logger.getLogger(ShoePanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to create customer!");
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (selectedCustomer == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose customer to delete");
            return;
        }
        if (MessageUtils.showConfirmDialog(
                "Delete customer",
                "Do you really want to delete customer?") == JOptionPane.YES_OPTION) {
            try {
                repository.delete(selectedCustomer.getId());
                customersTableModel.setCustomers(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????????'
                Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to delete customer!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tbCustomersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCustomersMouseClicked
        showCustomer();
    }//GEN-LAST:event_tbCustomersMouseClicked

    private void showCustomer() {
         clearForm();
        int selectedRow = tbCustomers.getSelectedRow();
        int rowIndex = tbCustomers.convertRowIndexToModel(selectedRow);
        int selectedCustomerId = (int) customersTableModel.getValueAt(rowIndex, 0);

        try {
            Optional<Customer> optCustomer = repository.select(selectedCustomerId);
            if (optCustomer.isPresent()) {
                selectedCustomer = optCustomer.get();
                fillForm(selectedCustomer);
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to show customer!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBrojTelefona;
    private javax.swing.JLabel lbBrojTelefonaError;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbIme;
    private javax.swing.JLabel lbImeError;
    private javax.swing.JLabel lbNazivKartice;
    private javax.swing.JLabel lbNazivKarticeError;
    private javax.swing.JLabel lbOIB;
    private javax.swing.JLabel lbOIBError;
    private javax.swing.JLabel lbPrezimeError;
    private javax.swing.JLabel lblEmailError;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JTable tbCustomers;
    private javax.swing.JTextField tfBrojTelefona;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfIme;
    private javax.swing.JTextField tfNazivKartice;
    private javax.swing.JTextField tfOIB;
    private javax.swing.JTextField tfPrezime;
    // End of variables declaration//GEN-END:variables

     private void init() {
         try {
            initValidation();
            initRepository();
            initTable();
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Fatal");
        }
    }
    
    private boolean formValid() {
         boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setText(validationFields.get(i).getText().trim().isEmpty() ? "X" : "");

            if ("Date".equals(validationFields.get(i).getName())) {
                try {
                    errorLabels.get(i).setText("");
                } catch (Exception e) {
                    ok = false;
                    errorLabels.get(i).setText("X");
                }
            }
        }

        return ok;
    }

    private void clearForm() {
        validationFields.forEach(e -> e.setText(""));
        errorLabels.forEach(e -> e.setText(""));
        
        selectedCustomer = null;
    }

    private void initValidation() {
        validationFields = Arrays.asList(tfIme, tfPrezime, tfOIB, tfEmail, tfBrojTelefona, tfNazivKartice);
        errorLabels = Arrays.asList(lbImeError, lbPrezimeError, lbOIBError, lblEmailError, lbBrojTelefonaError, lbNazivKarticeError);
   
    }

    private void initRepository() throws Exception {
        repository = RepositoryFactory.getCustomerRepository();
    }

    private void initTable() throws Exception {
        tbCustomers.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbCustomers.setAutoCreateRowSorter(true);
        tbCustomers.setRowHeight(25);
        customersTableModel = new CustomerTableModel(repository.selectAll());
        tbCustomers.setModel(customersTableModel);
    }

    private void fillForm(Customer selectedCustomer) {
        tfIme.setText(selectedCustomer.getIme());
        tfPrezime.setText(selectedCustomer.getPrezime());
        tfOIB.setText(selectedCustomer.getOIB());
        tfEmail.setText(selectedCustomer.getEmail());
        tfBrojTelefona.setText(selectedCustomer.getBrojTelefona());
        tfNazivKartice.setText(selectedCustomer.getNazivKartice());
        
    }
}
