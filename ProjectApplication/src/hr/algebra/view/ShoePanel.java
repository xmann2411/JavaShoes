/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.view;
import hr.algebra.Main;
import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Shoe;
import hr.algebra.utils.FileUtils;
import hr.algebra.utils.IconUtils;
import hr.algebra.utils.MessageUtils;
import hr.algebra.view.model.ShoesTableModel;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.JTextComponent;
/**
 *
 * @author Karla
 */
public class ShoePanel extends javax.swing.JPanel {

    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;

    private static final String DIR = "assets";

    private Repository repository;
    private ShoesTableModel shoesTableModel;

    private Shoe selectedShoe;
    /**
     * Creates new form ShoePanel
     */
    public ShoePanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfOpisProizvoda = new javax.swing.JTextField();
        lbModelError = new javax.swing.JLabel();
        lbIcon = new javax.swing.JLabel();
        lbBojaError = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbShoes = new javax.swing.JTable();
        lbBrojError = new javax.swing.JLabel();
        btnChoosePicture = new javax.swing.JButton();
        lbOpisProizvodaError = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblMarka = new javax.swing.JLabel();
        tfMarka = new javax.swing.JTextField();
        lblModel = new javax.swing.JLabel();
        tfModel = new javax.swing.JTextField();
        lblBroj = new javax.swing.JLabel();
        lblBoja = new javax.swing.JLabel();
        tfBoja = new javax.swing.JTextField();
        jsBroj = new javax.swing.JSpinner();
        lblOpisProizvoda = new javax.swing.JLabel();
        lbMarkaError = new javax.swing.JLabel();
        tfPicturePath = new javax.swing.JTextField();
        lblPicturePathError = new javax.swing.JLabel();

        lbModelError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbModelError.setForeground(new java.awt.Color(255, 0, 51));

        lbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images.png"))); // NOI18N
        lbIcon.setText("jLabel6");

        lbBojaError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbBojaError.setForeground(new java.awt.Color(255, 0, 51));

        tbShoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbShoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbShoesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbShoes);

        lbBrojError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbBrojError.setForeground(new java.awt.Color(255, 0, 51));

        btnChoosePicture.setBackground(new java.awt.Color(204, 204, 204));
        btnChoosePicture.setText("Choose picture");
        btnChoosePicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoosePictureActionPerformed(evt);
            }
        });

        lbOpisProizvodaError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbOpisProizvodaError.setForeground(new java.awt.Color(255, 0, 51));

        btnUpdate.setBackground(new java.awt.Color(255, 204, 204));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 0, 51));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblMarka.setText("Marka:");

        tfMarka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMarkaActionPerformed(evt);
            }
        });

        lblModel.setText("Model:");

        lblBroj.setText("Broj:");

        lblBoja.setText("Boja:");

        lblOpisProizvoda.setText("Opis proizvoda:");

        lbMarkaError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbMarkaError.setForeground(new java.awt.Color(255, 0, 51));

        tfPicturePath.setEditable(false);

        lblPicturePathError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPicturePathError.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBoja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBroj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMarka, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfModel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfMarka, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jsBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfBoja, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMarkaError)
                            .addComponent(lbModelError)
                            .addComponent(lbBrojError)
                            .addComponent(lbBojaError)
                            .addComponent(lbOpisProizvodaError)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOpisProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfOpisProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 318, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPicturePathError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfPicturePath, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnChoosePicture)
                .addGap(57, 57, 57))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(56, 56, 56)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE))))
                    .addGap(56, 56, 56)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(48, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMarka, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfMarka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblModel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbModelError))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jsBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbBrojError))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBoja, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfBoja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbBojaError))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblOpisProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfOpisProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbOpisProizvodaError)))
                            .addComponent(lbMarkaError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPicturePathError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPicturePath, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChoosePicture, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))))
                .addGap(30, 30, 30)
                .addComponent(btnUpdate)
                .addGap(197, 197, 197))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(lbIcon)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCreate)
                        .addComponent(btnDelete))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(29, 29, 29)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnChoosePictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoosePictureActionPerformed
        //? File ili Optional<File>
        Optional<File> file = FileUtils.uploadFile("Images", "jpg", "jpeg", "png");
        if (file == null) {
            return;
        }
        setIcon(lbIcon, new File(file.get().getAbsolutePath()));
    }//GEN-LAST:event_btnChoosePictureActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (selectedShoe == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose shoe to update");
            return;
        }
        if (formValid()) {
            try {
                if (!tfPicturePath.getText().trim().equals(selectedShoe.getPicturePath().trim())) {
                    if (selectedShoe.getPicturePath() != null) {
                        Files.deleteIfExists(Paths.get(selectedShoe.getPicturePath().trim()));
                    }
                    String localPicturePath = uploadPicture();
                    selectedShoe.setPicturePath(localPicturePath);
                }

                selectedShoe.setMarka(tfMarka.getText().trim());
                selectedShoe.setModel(tfModel.getText().trim());
                selectedShoe.setBroj((int)jsBroj.getValue());
                selectedShoe.setBoja(tfBoja.getText().trim());
                selectedShoe.setOpisProizvoda(tfOpisProizvoda.getText().trim());
                 
                repository.update(selectedShoe);
                shoesTableModel.setShoes(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????
                Logger.getLogger(ShoePanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to update shoe!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
         if (formValid()) {
            try {
                String localPicturePath = uploadPicture();
                Shoe shoe = new Shoe(
                        tfMarka.getText().trim(),
                        tfModel.getText().trim(),
                        (int)jsBroj.getValue(),
                        tfBoja.getText().trim(),
                        tfOpisProizvoda.getText().trim(),
                        localPicturePath                        
                );
                repository.create(shoe);
                shoesTableModel.setShoes(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                Logger.getLogger(ShoePanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to create shoe!");
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private String uploadPicture() throws IOException {
        String picturePath = tfPicturePath.getText().trim();
        String ext = picturePath.substring(picturePath.lastIndexOf("."));
        String pictureName = UUID.randomUUID() + ext;
        String localPicturePath = DIR + File.separator + pictureName;
        FileUtils.copy(picturePath, localPicturePath);
        return localPicturePath;
    }
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (selectedShoe == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose shoe to delete");
            return;
        }
        if (MessageUtils.showConfirmDialog(
                "Delete shoe",
                "Do you really want to delete shoe?") == JOptionPane.YES_OPTION) {
            try {
                if (selectedShoe.getPicturePath() != null) {
                    Files.deleteIfExists(Paths.get(selectedShoe.getPicturePath().trim()));
                }
                repository.delete(selectedShoe.getId());
                shoesTableModel.setShoes(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????????'
                Logger.getLogger(ShoePanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to delete shoe!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tfMarkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMarkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMarkaActionPerformed

    private void tbShoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbShoesMouseClicked
        showShoe();
    }//GEN-LAST:event_tbShoesMouseClicked

    private void showShoe() {
         clearForm();
        int selectedRow = tbShoes.getSelectedRow();
        int rowIndex = tbShoes.convertRowIndexToModel(selectedRow);
        int selectedShoeId = (int) shoesTableModel.getValueAt(rowIndex, 0);

        try {
            Optional<Shoe> optShoe = repository.select(selectedShoeId);
            if (optShoe.isPresent()) {
                selectedShoe = optShoe.get();
                fillForm(selectedShoe);
            }
        } catch (Exception ex) {
            Logger.getLogger(ShoePanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to show shoe!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoosePicture;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jsBroj;
    private javax.swing.JLabel lbBojaError;
    private javax.swing.JLabel lbBrojError;
    private javax.swing.JLabel lbIcon;
    private javax.swing.JLabel lbMarkaError;
    private javax.swing.JLabel lbModelError;
    private javax.swing.JLabel lbOpisProizvodaError;
    private javax.swing.JLabel lblBoja;
    private javax.swing.JLabel lblBroj;
    private javax.swing.JLabel lblMarka;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblOpisProizvoda;
    private javax.swing.JLabel lblPicturePathError;
    private javax.swing.JTable tbShoes;
    private javax.swing.JTextField tfBoja;
    private javax.swing.JTextField tfMarka;
    private javax.swing.JTextField tfModel;
    private javax.swing.JTextField tfOpisProizvoda;
    private javax.swing.JTextField tfPicturePath;
    // End of variables declaration//GEN-END:variables

    private void init() {
         try {
            initValidation();
            initRepository();
            initSize();
            initTable();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Fatal");
        }
    }

    private void setIcon(JLabel lbIcon, File file) {
        try {
            lbIcon.setIcon(IconUtils.createIcon(file.getAbsolutePath(), lbIcon.getWidth(), lbIcon.getHeight()));
            tfPicturePath.setText(file.getAbsolutePath());
        } catch (IOException e) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, e);
            MessageUtils.showErrorMessage("Error", "Unable to load image");
        }
    }

    
    private void initValidation() {
        validationFields = Arrays.asList(tfModel, tfMarka, tfBoja, tfOpisProizvoda, tfPicturePath);
        errorLabels = Arrays.asList(lbModelError, lbMarkaError, lbBojaError, lbOpisProizvodaError, lblPicturePathError);
    }

    
    private void initRepository() throws Exception {
        repository = RepositoryFactory.getShoeRepository();
    }

    private void initSize() {
        //jsBroj
    }

    private void initTable() throws Exception {
        tbShoes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbShoes.setAutoCreateRowSorter(true);
        tbShoes.setRowHeight(25);
        shoesTableModel = new ShoesTableModel(repository.selectAll());
        tbShoes.setModel(shoesTableModel);
    }
    
    private void clearForm() {
        validationFields.forEach(e -> e.setText(""));
        errorLabels.forEach(e -> e.setText(""));
        jsBroj.setValue(0);
        lbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images.png")));
        
        selectedShoe = null;
    }

    private void fillForm(Shoe selectedShoe) {
        if (selectedShoe.getPicturePath() != null && Files.exists(Paths.get(selectedShoe.getPicturePath().trim()))) {
            tfPicturePath.setText(selectedShoe.getPicturePath());
            setIcon(lbIcon, new File(selectedShoe.getPicturePath()));
        }
        tfMarka.setText(selectedShoe.getMarka());
        tfModel.setText(selectedShoe.getModel());
        jsBroj.getModel().setValue(selectedShoe.getBroj());
        tfBoja.setText(selectedShoe.getBoja());
        tfOpisProizvoda.setText(selectedShoe.getOpisProizvoda());
    }

    private boolean formValid() {
        boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setText(validationFields.get(i).getText().trim().isEmpty() ? "X" : "");

            if ("Date".equals(validationFields.get(i).getName())) {
                try {
                    LocalDateTime.parse(validationFields.get(i).getText().trim());
                    errorLabels.get(i).setText("");
                } catch (Exception e) {
                    ok = false;
                    errorLabels.get(i).setText("X");
                }
            }
        }

        return ok;
    }


}
