/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Seller;
import hr.algebra.utils.MessageUtils;
import hr.algebra.view.model.SellerTableModel;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Karla
 */
public class SellerPanel extends javax.swing.JPanel {

    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;

    //private static final String DIR = "assets";

    private Repository repository;
    private SellerTableModel sellersTableModel;

    private Seller selectedSeller;
    
    
    /**
     * Creates new form SellerPanel
     */
    public SellerPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfGodineStaza = new javax.swing.JTextField();
        lbProdavaonicaID = new javax.swing.JLabel();
        lbPrezimeError = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        lbIme = new javax.swing.JLabel();
        lbImeError = new javax.swing.JLabel();
        tfProdavaonicaID = new javax.swing.JTextField();
        lbGodineStaza = new javax.swing.JLabel();
        lblPrezime = new javax.swing.JLabel();
        lbProdavaonicaIDError = new javax.swing.JLabel();
        tfPrezime = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        tfIme = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSellers = new javax.swing.JTable();
        tfErrorGodine = new javax.swing.JLabel();

        lbProdavaonicaID.setText("Prodavaonica ID");

        lbPrezimeError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPrezimeError.setForeground(new java.awt.Color(255, 0, 51));

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lbIme.setText("Ime:");

        lbImeError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbImeError.setForeground(new java.awt.Color(255, 0, 51));

        lbGodineStaza.setText("Godine staza");

        lblPrezime.setText("Prezime:");

        lbProdavaonicaIDError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbProdavaonicaIDError.setForeground(new java.awt.Color(255, 0, 51));

        btnUpdate.setBackground(new java.awt.Color(255, 204, 204));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 0, 51));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbSellers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbSellers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSellersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSellers);

        tfErrorGodine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tfErrorGodine.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbIme, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfIme, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPrezimeError)
                                .addGap(352, 352, 352)
                                .addComponent(lbProdavaonicaIDError))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbImeError)
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbGodineStaza, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbProdavaonicaID, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfProdavaonicaID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfGodineStaza, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfErrorGodine))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbGodineStaza, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfGodineStaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfErrorGodine))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbProdavaonicaID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfProdavaonicaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPrezimeError)
                            .addComponent(lbProdavaonicaIDError)))
                    .addComponent(lbImeError)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tfIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbIme, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete))
                .addGap(87, 87, 87)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
         if (formValid()) {
            try {
                //String localPicturePath = uploadPicture();
                Seller seller = new Seller(
                        tfIme.getText().trim(),
                        tfPrezime.getText().trim(),
                        Integer.parseInt(tfGodineStaza.getText()),
                        Integer.parseInt(tfProdavaonicaID.getText())                                              
                );
                repository.create(seller);
                sellersTableModel.setSellers(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                Logger.getLogger(SellerPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to create seller!");
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (selectedSeller == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose seller to update");
            return;
        }
        if (formValid()) {
            try {
                selectedSeller.setIme(tfIme.getText().trim());
                selectedSeller.setPrezime(tfPrezime.getText().trim());
                selectedSeller.setGodineStaza(Integer.parseInt(tfGodineStaza.getText()));
                selectedSeller.setProdavaonicaID(Integer.parseInt(tfProdavaonicaID.getText()));
                
                repository.update(selectedSeller);
                sellersTableModel.setSellers(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????
                Logger.getLogger(SellerPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to update seller!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         if (selectedSeller == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose seller to delete");
            return;
        }
        if (MessageUtils.showConfirmDialog(
                "Delete seller",
                "Do you really want to delete seller?") == JOptionPane.YES_OPTION) {
            try {                
                repository.delete(selectedSeller.getId());
                sellersTableModel.setSellers(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????????'
                Logger.getLogger(SellerPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to delete seller!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tbSellersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSellersMouseClicked
        showSeller();
    }//GEN-LAST:event_tbSellersMouseClicked

    private void showSeller() {
         clearForm();
        int selectedRow = tbSellers.getSelectedRow();
        int rowIndex = tbSellers.convertRowIndexToModel(selectedRow);
        int selectedReceiptId = (int) sellersTableModel.getValueAt(rowIndex, 0);

        try {
            Optional<Seller> optSeller = repository.select(selectedReceiptId);
            if (optSeller.isPresent()) {
                selectedSeller = optSeller.get();
                fillForm(selectedSeller);
            }
        } catch (Exception ex) {
            Logger.getLogger(SellerPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to show seller!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbGodineStaza;
    private javax.swing.JLabel lbIme;
    private javax.swing.JLabel lbImeError;
    private javax.swing.JLabel lbPrezimeError;
    private javax.swing.JLabel lbProdavaonicaID;
    private javax.swing.JLabel lbProdavaonicaIDError;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JTable tbSellers;
    private javax.swing.JLabel tfErrorGodine;
    private javax.swing.JTextField tfGodineStaza;
    private javax.swing.JTextField tfIme;
    private javax.swing.JTextField tfPrezime;
    private javax.swing.JTextField tfProdavaonicaID;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            initValidation();
            initRepository();
            //initSize();
            initTable();
        } catch (Exception ex) {
            Logger.getLogger(SellerPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Fatal");
        }
    }

    private boolean formValid() {
         boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setText(validationFields.get(i).getText().trim().isEmpty() ? "X" : "");

            if ("Date".equals(validationFields.get(i).getName())) {
                try {
                    LocalDateTime.parse(validationFields.get(i).getText().trim());
                    errorLabels.get(i).setText("");
                } catch (Exception e) {
                    ok = false;
                    errorLabels.get(i).setText("X");
                }
            }
        }

        return ok;
    }

    private void clearForm() {
        validationFields.forEach(e -> e.setText(""));
        errorLabels.forEach(e -> e.setText(""));
        
        selectedSeller = null;
    }

    private void fillForm(Seller selectedSeller) {
        tfIme.setText((selectedSeller.getIme()));
        //tfKupacID.setText((String)(selectedReceipt.getKupacID()));
        tfPrezime.setText((selectedSeller.getPrezime()));
        tfGodineStaza.setText(String.valueOf(selectedSeller.getGodineStaza()));
        tfProdavaonicaID.setText(String.valueOf(selectedSeller.getProdavaonicaID()));
    }

    private void initValidation() {
        validationFields = Arrays.asList(tfIme, tfPrezime, tfGodineStaza, tfProdavaonicaID);
        errorLabels = Arrays.asList(lbImeError, lbPrezimeError, tfErrorGodine, lbProdavaonicaIDError);
    }

    private void initRepository() throws Exception {
        repository = RepositoryFactory.getSellerRepository();
    }

    private void initTable() throws Exception {
        tbSellers.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbSellers.setAutoCreateRowSorter(true);
        tbSellers.setRowHeight(25);
        sellersTableModel = new SellerTableModel(repository.selectAll());
        tbSellers.setModel(sellersTableModel);
    }
}
