/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.view;

import hr.algebra.Main;
import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Receipt;
import hr.algebra.utils.MessageUtils;
import hr.algebra.view.model.ReceiptTableModel;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Karla
 */
public class ReceiptPanel extends javax.swing.JPanel {
    
    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;

    private static final String DIR = "assets";

    private Repository repository;
    private ReceiptTableModel receiptsTableModel;

    private Receipt selectedReceipt;
    /**
     * Creates new form ReceiptPanel
     */
    public ReceiptPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProdavacID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbReciepts = new javax.swing.JTable();
        lblBroj = new javax.swing.JLabel();
        lbParCipelaIDError = new javax.swing.JLabel();
        lblCijena = new javax.swing.JLabel();
        tfCijena = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        lbKupacIDError = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        lbProdavacIDError = new javax.swing.JLabel();
        lblKupacID = new javax.swing.JLabel();
        lblPopust = new javax.swing.JLabel();
        tfPopust = new javax.swing.JTextField();
        lbDatumIzdavanjaError = new javax.swing.JLabel();
        lblDatumIzdavanja = new javax.swing.JLabel();
        tfDatumIzdavanja = new javax.swing.JTextField();
        lblCijenaError = new javax.swing.JLabel();
        tfKupacID = new javax.swing.JTextField();
        tfParCipelaID = new javax.swing.JTextField();
        tfProdavacID = new javax.swing.JTextField();
        lblPopustError = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(704, 555));

        lblProdavacID.setText("Prodavac ID:");

        tbReciepts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbReciepts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRecieptsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbReciepts);

        lblBroj.setText("ParCipela ID:");

        lbParCipelaIDError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbParCipelaIDError.setForeground(new java.awt.Color(255, 0, 51));

        lblCijena.setText("Cijena:");

        btnUpdate.setBackground(new java.awt.Color(255, 204, 204));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lbKupacIDError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbKupacIDError.setForeground(new java.awt.Color(255, 0, 51));

        btnDelete.setBackground(new java.awt.Color(153, 0, 51));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lbProdavacIDError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbProdavacIDError.setForeground(new java.awt.Color(255, 0, 51));

        lblKupacID.setText("Kupac ID:");

        lblPopust.setText("Popust: ");

        lbDatumIzdavanjaError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbDatumIzdavanjaError.setForeground(new java.awt.Color(255, 0, 51));

        lblDatumIzdavanja.setText("Datum izdavanja:");

        lblCijenaError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCijenaError.setForeground(new java.awt.Color(255, 0, 51));

        lblPopustError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPopustError.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBroj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProdavacID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKupacID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfParCipelaID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfProdavacID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfKupacID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbParCipelaIDError)
                            .addComponent(lbKupacIDError)
                            .addComponent(lbProdavacIDError))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPopust, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblDatumIzdavanja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCijena, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfDatumIzdavanja, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfPopust, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfCijena, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(lbDatumIzdavanjaError))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblCijenaError))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPopustError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCijenaError)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(lbDatumIzdavanjaError))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPopustError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbKupacIDError)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(tfKupacID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfProdavacID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfParCipelaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblKupacID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblProdavacID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbProdavacIDError))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbParCipelaIDError))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfCijena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCijena, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblPopust, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfPopust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDatumIzdavanja, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfDatumIzdavanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete))
                .addGap(82, 82, 82)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
            if (selectedReceipt == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose receipt to update");
            return;
        }
        if (formValid()) {
            try {
                selectedReceipt.setKupacID(Integer.parseInt(tfKupacID.getText()));
                selectedReceipt.setProdavacID(Integer.parseInt(tfProdavacID.getText()));
                selectedReceipt.setParCipelaID(Integer.parseInt(tfParCipelaID.getText()));
                selectedReceipt.setCijena(Integer.parseInt(tfCijena.getText()));
                selectedReceipt.setPopust(Integer.parseInt(tfPopust.getText()));
                selectedReceipt.setDatumIzdavanja(LocalDateTime.parse(tfDatumIzdavanja.getText()));
                
                repository.update(selectedReceipt);
                receiptsTableModel.setReceipts(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????
                Logger.getLogger(ReceiptPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to update receipt!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if (formValid()) {
            try {
                Receipt receipt = new Receipt(
                        Integer.parseInt(tfKupacID.getText()),
                        Integer.parseInt(tfProdavacID.getText()),
                        Integer.parseInt(tfParCipelaID.getText()),
                        Integer.parseInt(tfCijena.getText()),
                        Integer.parseInt(tfPopust.getText()),
                        (LocalDateTime.parse(tfDatumIzdavanja.getText().trim(), Receipt.DATE_FORMATTER))
                        );
                repository.create(receipt);
                receiptsTableModel.setReceipts(repository.selectAll());
                //ReceiptsTableModel.setReceipts(ReceiptRepository.selectAll());

                clearForm();
            } catch (Exception ex) {
                Logger.getLogger(ReceiptPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to create receipt!");
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (selectedReceipt == null) {
            MessageUtils.showInformationMessage("Wrong operation", "Please choose receipt to delete");
            return;
        }
        if (MessageUtils.showConfirmDialog(
                "Delete receipt",
                "Do you really want to delete receipt?") == JOptionPane.YES_OPTION) {
            try {
                repository.delete(selectedReceipt.getId());
                receiptsTableModel.setReceipts(repository.selectAll());

                clearForm();
            } catch (Exception ex) {
                //???????????????'
                Logger.getLogger(ReceiptPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to delete receipt!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tbRecieptsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRecieptsMouseClicked
        showReceipt();
    }//GEN-LAST:event_tbRecieptsMouseClicked

    
    private void showReceipt() {
         clearForm();
        int selectedRow = tbReciepts.getSelectedRow();
        int rowIndex = tbReciepts.convertRowIndexToModel(selectedRow);
        int selectedReceiptId = (int) receiptsTableModel.getValueAt(rowIndex, 0);

        try {
            Optional<Receipt> optReceipt = repository.select(selectedReceiptId);
            if (optReceipt.isPresent()) {
                selectedReceipt = optReceipt.get();
                fillForm(selectedReceipt);
            }
        } catch (Exception ex) {
            Logger.getLogger(ReceiptPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to show receipt!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDatumIzdavanjaError;
    private javax.swing.JLabel lbKupacIDError;
    private javax.swing.JLabel lbParCipelaIDError;
    private javax.swing.JLabel lbProdavacIDError;
    private javax.swing.JLabel lblBroj;
    private javax.swing.JLabel lblCijena;
    private javax.swing.JLabel lblCijenaError;
    private javax.swing.JLabel lblDatumIzdavanja;
    private javax.swing.JLabel lblKupacID;
    private javax.swing.JLabel lblPopust;
    private javax.swing.JLabel lblPopustError;
    private javax.swing.JLabel lblProdavacID;
    private javax.swing.JTable tbReciepts;
    private javax.swing.JTextField tfCijena;
    private javax.swing.JTextField tfDatumIzdavanja;
    private javax.swing.JTextField tfKupacID;
    private javax.swing.JTextField tfParCipelaID;
    private javax.swing.JTextField tfPopust;
    private javax.swing.JTextField tfProdavacID;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            initValidation();
            initRepository();
            //initSize();
            initTable();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Fatal");
        }
    }

    private boolean formValid() {
        boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setText(validationFields.get(i).getText().trim().isEmpty() ? "X" : "");

            if ("Date".equals(validationFields.get(i).getName())) {
                try {
                    LocalDateTime.parse(validationFields.get(i).getText().trim(), Receipt.DATE_FORMATTER);
                    errorLabels.get(i).setText("");
                } catch (Exception e) {
                    ok = false;
                    errorLabels.get(i).setText("X");
                }
            }
        }

        return ok;
    }

    private void clearForm() {
        validationFields.forEach(e -> e.setText(""));
        errorLabels.forEach(e -> e.setText(""));
        
        selectedReceipt = null;
    }

    private void fillForm(Receipt selectedReceipt) {
        tfKupacID.setText(String.valueOf(selectedReceipt.getKupacID()));
        //tfKupacID.setText((String)(selectedReceipt.getKupacID()));
        tfProdavacID.setText(String.valueOf(selectedReceipt.getProdavacID()));
        tfParCipelaID.setText(String.valueOf(selectedReceipt.getParCipelaID()));
        tfCijena.setText(String.valueOf(selectedReceipt.getCijena()));
        tfPopust.setText(String.valueOf(selectedReceipt.getPopust()));
        tfDatumIzdavanja.setText(selectedReceipt.getDatumIzdavanja().format(Receipt.DATE_FORMATTER));
    }

    private void initValidation() {
        validationFields = Arrays.asList(tfKupacID, tfProdavacID, tfParCipelaID, tfCijena, tfPopust, tfDatumIzdavanja);
        errorLabels = Arrays.asList(lbKupacIDError, lbProdavacIDError, lbParCipelaIDError, lblCijenaError, lblPopustError, lbDatumIzdavanjaError);
    }

    private void initRepository() throws Exception {
        repository = RepositoryFactory.getReceiptRepository();

    }

    private void initTable() throws Exception {
        tbReciepts.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbReciepts.setAutoCreateRowSorter(true);
        tbReciepts.setRowHeight(25);
        receiptsTableModel = new ReceiptTableModel(repository.selectAll());
        tbReciepts.setModel(receiptsTableModel);
    }

}
